{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://demo-webpack/webpack/bootstrap","webpack://demo-webpack/webpack/runtime/global","webpack://demo-webpack/webpack/runtime/publicPath","webpack://demo-webpack/./src/assets/MythicCards/brown/index.js","webpack://demo-webpack/./src/data/mythicCards/brown/index.js","webpack://demo-webpack/./src/assets/MythicCards/green/index.js","webpack://demo-webpack/./src/data/mythicCards/green/index.js","webpack://demo-webpack/./src/assets/MythicCards/blue/index.js","webpack://demo-webpack/./src/data/mythicCards/blue/index.js","webpack://demo-webpack/./src/constants/imageCards.js","webpack://demo-webpack/./src/constants/deckIdlevels.js","webpack://demo-webpack/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","import brown1 from './brown1.png';\nimport brown2 from './brown2.png';\nimport brown3 from './brown3.png';\nimport brown4 from './brown4.png';\nimport brown5 from './brown5.png';\nimport brown6 from './brown6.png';\nimport brown7 from './brown7.png';\nimport brown8 from './brown8.png';\nimport brown9 from './brown9.png';\nimport brown10 from './brown10.png';\nimport brown11 from './brown11.png';\nimport brown12 from './brown12.png';\nimport brown13 from './brown13.png';\nimport brown14 from './brown14.png';\nimport brown15 from './brown15.png';\nimport brown16 from './brown16.png';\nimport brown17 from './brown17.png';\nimport brown18 from './brown18.png';\nimport brown19 from './brown19.png';\nimport brown20 from './brown20.png';\nimport brown21 from './brown21.png';\n\nconst cards = {\n  brown1,\n  brown2,\n  brown3,\n  brown4,\n  brown5,\n  brown6,\n  brown7,\n  brown8,\n  brown9,\n  brown10,\n  brown11,\n  brown12,\n  brown13,\n  brown14,\n  brown15,\n  brown16,\n  brown17,\n  brown18,\n  brown19,\n  brown20,\n  brown21,\n}\n\nexport default cards","import brownCardsAssets from '../../../assets/MythicCards/brown';\n\nconst brownCardsData = [\n  {\n    id: 'brown1',\n    cardFace: brownCardsAssets.brown1,\n    difficulty: 'normal',\n    color:'brown'\n  },\n  {\n    id: 'brown2',\n    cardFace: brownCardsAssets.brown2,\n    difficulty: 'normal',\n    color:'brown'\n  },\n  {\n    id: 'brown3',\n    cardFace: brownCardsAssets.brown3,\n    difficulty: 'normal',\n    color:'brown'\n  },\n  {\n    id: 'brown4',\n    cardFace: brownCardsAssets.brown4,\n    difficulty: 'normal',\n    color:'brown'\n  },\n  {\n    id: 'brown5',\n    cardFace: brownCardsAssets.brown5,\n    difficulty: 'normal',\n    color:'brown'\n  },\n  {\n    id: 'brown6',\n    cardFace: brownCardsAssets.brown6,\n    difficulty: 'hard',\n    color:'brown'\n  },\n  {\n    id: 'brown7',\n    cardFace: brownCardsAssets.brown7,\n    difficulty: 'hard',\n    color:'brown'\n  },\n  {\n    id: 'brown8',\n    cardFace: brownCardsAssets.brown8,\n    difficulty: 'hard',\n    color:'brown'\n  },\n  {\n    id: 'brown9',\n    cardFace: brownCardsAssets.brown9,\n    difficulty: 'hard',\n    color:'brown'\n  },\n  {\n    id: 'brown10',\n    cardFace: brownCardsAssets.brown10,\n    difficulty: 'hard',\n    color:'brown'\n  },\n  {\n    id: 'brown11',\n    cardFace: brownCardsAssets.brown11,\n    difficulty: 'easy',\n    color:'brown'\n  },\n  {\n    id: 'brown12',\n    cardFace: brownCardsAssets.brown12,\n    difficulty: 'easy',\n    color:'brown'\n  },\n  {\n    id: 'brown13',\n    cardFace: brownCardsAssets.brown13,\n    difficulty: 'easy',\n    color:'brown'\n  },\n  {\n    id: 'brown14',\n    cardFace: brownCardsAssets.brown14,\n    difficulty: 'easy',\n    color:'brown'\n  },\n  {\n    id: 'brown15',\n    cardFace: brownCardsAssets.brown15,\n    difficulty: 'normal',\n    color:'brown'\n  },\n  {\n    id: 'brown16',\n    cardFace: brownCardsAssets.brown16,\n    difficulty: 'normal',\n    color:'brown'\n  },\n  {\n    id: 'brown17',\n    cardFace: brownCardsAssets.brown17,\n    difficulty: 'normal',\n    color:'brown'\n  },\n  {\n    id: 'brown18',\n    cardFace: brownCardsAssets.brown18,\n    difficulty: 'normal',\n    color:'brown'\n  },\n  {\n    id: 'brown19',\n    cardFace: brownCardsAssets.brown19,\n    difficulty: 'normal',\n    color:'brown'\n  },\n  {\n    id: 'brown20',\n    cardFace: brownCardsAssets.brown20,\n    difficulty: 'normal',\n    color:'brown'\n  },\n  {\n    id: 'brown21',\n    cardFace: brownCardsAssets.brown21,\n    difficulty: 'easy',\n    color:'brown'\n  },\n]\n\nexport default brownCardsData","import green1 from './green1.png';\nimport green2 from './green2.png';\nimport green3 from './green3.png';\nimport green4 from './green4.png';\nimport green5 from './green5.png';\nimport green6 from './green6.png';\nimport green7 from './green7.png';\nimport green8 from './green8.png';\nimport green9 from './green9.png';\nimport green10 from './green10.png';\nimport green11 from './green11.png';\nimport green12 from './green12.png';\nimport green13 from './green13.png';\nimport green14 from './green14.png';\nimport green15 from './green15.png';\nimport green16 from './green16.png';\nimport green17 from './green17.png';\nimport green18 from './green18.png';\n\nconst cards = {\n  green1,\n  green2,\n  green3,\n  green4,\n  green5,\n  green6,\n  green7,\n  green8,\n  green9,\n  green10,\n  green11,\n  green12,\n  green13,\n  green14,\n  green15,\n  green16,\n  green17,\n  green18,\n};\n\nexport default cards;","import greenCardsAssets from '../../../assets/MythicCards/green';\n\nconst cardsData = [\n  {\n    id: 'green1',\n    cardFace: greenCardsAssets.green1,\n    difficulty: 'easy',\n    color:'green'\n  },\n  {\n    id: 'green2',\n    cardFace: greenCardsAssets.green2,\n    difficulty: 'hard',\n    color:'green'\n  },\n  {\n    id: 'green3',\n    cardFace: greenCardsAssets.green3,\n    difficulty: 'hard',\n    color:'green'\n  },\n  {\n    id: 'green4',\n    cardFace: greenCardsAssets.green4,\n    difficulty: 'hard',\n    color:'green'\n  },\n  {\n    id: 'green5',\n    cardFace: greenCardsAssets.green5,\n    difficulty: 'hard',\n    color:'green'\n  },\n  {\n    id: 'green6',\n    cardFace: greenCardsAssets.green6,\n    difficulty: 'hard',\n    color:'green'\n  },\n  {\n    id: 'green7',\n    cardFace: greenCardsAssets.green7,\n    difficulty: 'normal',\n    color:'green'\n  },\n  {\n    id: 'green8',\n    cardFace: greenCardsAssets.green8,\n    difficulty: 'normal',\n    color:'green'\n  },\n  {\n    id: 'green9',\n    cardFace: greenCardsAssets.green9,\n    difficulty: 'normal',\n    color:'green'\n  },\n  {\n    id: 'green10',\n    cardFace: greenCardsAssets.green10,\n    difficulty: 'normal',\n    color:'green'\n  },\n  {\n    id: 'green11',\n    cardFace: greenCardsAssets.green11,\n    difficulty: 'normal',\n    color:'green'\n  },\n  {\n    id: 'green12',\n    cardFace: greenCardsAssets.green12,\n    difficulty: 'easy',\n    color:'green'\n  },\n  {\n    id: 'green13',\n    cardFace: greenCardsAssets.green13,\n    difficulty: 'normal',\n    color:'green'\n  },\n  {\n    id: 'green14',\n    cardFace: greenCardsAssets.green14,\n    difficulty: 'normal',\n    color:'green'\n  },\n  {\n    id: 'green15',\n    cardFace: greenCardsAssets.green15,\n    difficulty: 'normal',\n    color:'green'\n  },\n  {\n    id: 'green16',\n    cardFace: greenCardsAssets.green16,\n    difficulty: 'easy',\n    color:'green'\n  },\n  {\n    id: 'green17',\n    cardFace: greenCardsAssets.green17,\n    difficulty: 'easy',\n    color:'green'\n  },\n  {\n    id: 'green18',\n    cardFace: greenCardsAssets.green18,\n    difficulty: 'easy',\n    color:'green'\n  },\n]\n\nexport default cardsData","import blue1 from './blue1.png';\nimport blue2 from './blue2.png';\nimport blue3 from './blue3.png';\nimport blue4 from './blue4.png';\nimport blue5 from './blue5.png';\nimport blue6 from './blue6.png';\nimport blue7 from './blue7.png';\nimport blue8 from './blue8.png';\nimport blue9 from './blue9.png';\nimport blue10 from './blue10.png';\nimport blue11 from './blue11.png';\nimport blue12 from './blue12.png';\n\nconst cards = {\n  blue1,\n  blue2,\n  blue3,\n  blue4,\n  blue5,\n  blue6,\n  blue7,\n  blue8,\n  blue9,\n  blue10,\n  blue11,\n  blue12,\n}\n\nexport default cards","import blueCardsAssets from '../../../assets/MythicCards/blue';\n\nconst cardsData = [\n  {\n    id: 'blue1',\n    cardFace: blueCardsAssets.blue1,\n    difficulty: 'hard',\n    color:'blue'\n  },\n  {\n    id: 'blue2',\n    cardFace: blueCardsAssets.blue2,\n    difficulty: 'hard',\n    color:'blue'\n  },\n  {\n    id: 'blue3',\n    cardFace: blueCardsAssets.blue3,\n    difficulty: 'easy',\n    color:'blue'\n  },\n  {\n    id: 'blue4',\n    cardFace: blueCardsAssets.blue4,\n    difficulty: 'easy',\n    color:'blue'\n  },\n  {\n    id: 'blue5',\n    cardFace: blueCardsAssets.blue5,\n    difficulty: 'easy',\n    color:'blue'\n  },\n  {\n    id: 'blue6',\n    cardFace: blueCardsAssets.blue6,\n    difficulty: 'hard',\n    color:'blue'\n  },\n  {\n    id: 'blue7',\n    cardFace: blueCardsAssets.blue7,\n    difficulty: 'normal',\n    color:'blue'\n  },\n  {\n    id: 'blue8',\n    cardFace: blueCardsAssets.blue8,\n    difficulty: 'hard',\n    color:'blue'\n  },\n  {\n    id: 'blue9',\n    cardFace: blueCardsAssets.blue9,\n    difficulty: 'normal',\n    color:'blue'\n  },\n  {\n    id: 'blue10',\n    cardFace: blueCardsAssets.blue10,\n    difficulty: 'easy',\n    color:'blue'\n  },\n  {\n    id: 'blue11',\n    cardFace: blueCardsAssets.blue11,\n    difficulty: 'normal',\n    color:'blue'\n  },\n  {\n    id: 'blue12',\n    cardFace: blueCardsAssets.blue12,\n    difficulty: 'normal',\n    color:'blue'\n  },\n]\n\nexport default cardsData","export const ImageCards = {\r\n    AzathothCard: [\r\n        [1, 2, 1],\r\n        [2, 3, 1],\r\n        [2, 4, 0],\r\n    ],\r\n    CthulhuCard: [\r\n        [0, 2, 2],\r\n        [1, 3, 0],\r\n        [3, 4, 0],\r\n    ],\r\n    YogSothothCard: [\r\n        [0, 2, 1],\r\n        [2, 3, 1],\r\n        [3, 4, 0],\r\n    ],\r\n    ShubNiggurathCard: [\r\n        [1, 2, 1],\r\n        [3, 2, 1],\r\n        [2, 4, 0],\r\n    ]\r\n}","export const deckIdlevels = {\r\n    very_easy,\r\n    easy,\r\n    normal,\r\n    hard,\r\n    very_hard\r\n}","\nimport brownCardsData from './data/mythicCards/brown/index.js';\nimport greenCardsData from './data/mythicCards/green/index.js';\nimport blueCardsData from './data/mythicCards/blue/index.js';\nimport ancientsData from './data/ancients.js'\nimport { ImageCards } from './constants/imageCards.js';\nimport { deckIdlevels } from './constants/deckIdlevels.js';\n\nconst Azathoth = document.querySelector('.Azathoth');\nconst Cthulhu = document.querySelector('.Cthulhu');\nconst YogSothoth = document.querySelector('.YogSothoth');\nconst ShubNiggurath = document.querySelector('.ShubNiggurath');\nconst cardDeck = document.querySelector('.mythicCardBackground');\nconst viewCardDeck = document.querySelector('.opencard');\n\nconst card = document.getElementsByClassName('card');\nconst level = document.getElementsByClassName('tags');\n\nlet blue1 = document.querySelector('.blue1');\nlet blue2 = document.querySelector('.blue2');\nlet blue3 = document.querySelector('.blue3');\n\nlet brown1 = document.querySelector('.brown1');\nlet brown2 = document.querySelector('.brown2');\nlet brown3 = document.querySelector('.brown3');\n\nlet green1 = document.querySelector('.green1');\nlet green2 = document.querySelector('.green2');\nlet green3 = document.querySelector('.green3');\n\n\n\n\n\n\n/* __________________________________________________________________________________________________ */\n\n/* состав карт в каждом этапе для каждого Древнего: */\n\nconst matrixAzathoth = [\n  [1, 2, 1],\n  [2, 3, 1],\n  [2, 4, 0],\n];\n\nconst matrixCthulhu = [\n  [0, 2, 2],\n  [1, 3, 0],\n  [3, 4, 0],\n];\n\nconst matrixYogSothoth = [\n  [0, 2, 1],\n  [2, 3, 1],\n  [3, 4, 0],\n];\n\nconst matrixShubNiggurath = [\n  [1, 2, 1],\n  [3, 2, 1],\n  [2, 4, 0],\n];\n\n/* функция, которая считает количество карт каждого цвета\n  0 колонка - зеленый\n  1 колонка - коричневый\n  2 колонка - синий\n*/\nfunction showSumByColumn(matrix) {\n  let sumResults = [];\n  let sum;\n  let countColumn = matrix[0].length;\n\n  for (let i = 0; i < countColumn; i++) {\n    sum = 0;\n    for (let j = 0; j < matrix.length; j++) {\n      sum +=matrix[j][i];\n    }\n    sumResults.push(sum);\n  }\nconsole.log(sumResults);\nreturn sumResults;\n}\n// showSumByColumn(matrix);\n// showSumByColumn(matrixAzathoth);\n\n/**\n * функция, которая добавляет значения\n * для каждого этапа в зависимости от \n * выбранного Древнего\n * @param {number[][]} matrix \n */\nfunction addNumbers(matrix) {\n    green1.textContent = matrix[0][0];\n    brown1.textContent = matrix[0][1];\n    blue1.textContent = matrix[0][2];\n\n    green2.textContent = matrix[1][0];\n    brown2.textContent = matrix[1][1];\n    blue2.textContent = matrix[1][2];\n\n    green3.textContent = matrix[2][0];\n    brown3.textContent = matrix[2][1];\n    blue3.textContent = matrix[2][2];\n  };\n\n/**\n * Get if of card be click event\n * @param {PointerEvent} event \n * @returns {string}\n */\nfunction getIdCard(event) {\n  return event.target.id;\n}\n\n/**\n * add class selected to ancients card\n * @param {string} cardId \n */\nfunction toggleCard (cardId) {\n  const ancient = document.getElementById(cardId);\n  Array.prototype.forEach.call(card, (item) => {\n    item.classList.remove('checked');\n  })\n  // card.classList.remove(\"checked\");\n  ancient.classList.add(\"checked\");\n}\n\nArray.prototype.forEach.call(card, (item) => {\n  item.addEventListener(\"click\", cardClickHandler);\n});\n\n/**\n * Handlaer for card click\n * selects an Ancients card and adds numbers to Mythos Deck\n * @param {MouseEvent} event \n */\nfunction cardClickHandler(event) {\n   const cardId = getIdCard(event);\n   const matrix = ImageCards[cardId];\n   if (matrix) {\n     addNumbers(matrix);\n     toggleCard (cardId);\n   } else {\n     alert('game over, id Ancients card not exist');\n   }\n}\n\n//__________________________________________________________\n\n/**\n * Get id of level by click event\n * @param {PointerEvent} event \n * @returns {string}\n */\n function getIdLevel(event) {\n  return event.target.id;\n}\n\n/**\n * add class selected to level tag\n * @param {string} levelId\n */\n function toggleLevel (levelId) {\n  const levelButton = document.getElementById(levelId);\n  Array.prototype.forEach.call(level, (item) => {\n    item.classList.remove('checked_level');\n  })\n  levelButton.classList.add(\"checked_level\");\n}\n\nArray.prototype.forEach.call(level, (item) => {\n  item.addEventListener(\"click\", levelClickHandler);\n});\n\n/**\n * Handlaer for level click\n * selects level and create new Deck\n * @param {MouseEvent} event \n */\nfunction levelClickHandler(event) {\n   const levelId = getIdLevel(event);\n   const dataLevelId = deckIdlevels[levelId];\n  console.log(dataLevelId);\n   toggleLevel (levelId);\n  //  if (matrix) {\n  //    addNumbers(matrix);\n  //    toggleCard (levelId);\n  //  } else {\n  //    alert('game over, id Ancients card not exist');\n  //  }\n}\n\n\n/**\n * 1) По выбранному уровню сложности отфильтрофвать оригинальный массив\n * 2) Если очень сложный - сперва фильтруем по щупальцам, затем добавля.ешь недостующие обычные\n * 3) \n * @param {*} deck \n * @returns \n */\n//  function createNewOriginalDeck(deck) {\n//   let result;\n//   if(easy) {\n//     result = deck.filter(deck.difficulty == 'easy');\n//   } else if\n// }\n\n\n  // card.addEventListener(\"click\", () => addNumbers(matrixShubNiggurath));\n\n\n//  __________________________________________________________\n\n// собираю зеленую колоду на примере Азатота\n\n  // let deskLengthGreen = showSumByColumn(matrixAzathoth)[0]; // количество зеленых карт\n  // let min = 0;\n  // let max = greenCardsData.length - 1;\n\n  // функция которая собирает зеленую колоду\n\n// function addGreenDesk () {\n//   let result = [];\n//   for (let i=0; i < deskLengthGreen; i++) {\n//     if(!result.includes(greenCardsData[getRandomNum(min,max)])) {\n//       result.push(greenCardsData[getRandomNum(min,max)])\n//     }\n//   }\n//   console.log(result);\n// }\n// addGreenDesk();\n\n\n\n\n// функция которая собирает колоду по цветам, на примере Азатота\n\nconst green = 0;\nconst brown = 1;\nconst blue = 2;\n\nconst stage1 = 0;\nconst stage2 = 1;\nconst stage3 = 2;\n\nfunction addFirstDesk(matrix, cardsData, color) {\n\n  let deskLength = showSumByColumn(matrix)[color]; // количество карт\n  let min = 0;\n  let max = cardsData.length - 1;\n  let result = [];\n\n  while (result.length < deskLength) {\n    if (!result.includes(cardsData[getRandomNum(min, max)])) {\n      result.push(cardsData[getRandomNum(min, max)])\n    }\n  }\n  return result;\n}\n\nconst firstGreenDesk = addFirstDesk(matrixAzathoth, greenCardsData, green);\nconst firstBrownDesk = addFirstDesk(matrixAzathoth, brownCardsData, brown);\nconst firstBlueDesk = addFirstDesk(matrixAzathoth, blueCardsData, blue);\n\nconsole.log(firstGreenDesk);\nconsole.log(firstBrownDesk);\nconsole.log(firstBlueDesk);\n\n /* функция, возвращающая \n  рандомное значение из интервала\n*/\n\nfunction getRandomNum(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n/* делаем колоды для этапов\n*/\n\n\n/*функция которая выбирает нужное количество карт*/\n// function arrayFilled(len, cardsData) {\n//   let min = 0;\n//   let max = cardsData.length - 1;\n//   let array = [];\n//   for(len; len > 0; len--) {\n//     array.splice(cardsData[getRandomNum(min, max)]);\n//   }\n//   return array;\n// }\n\n// function stageDesk (firstDesk, matrix, color, stage) {\n//   let result =[];\n//   for (let i=0; i < matrix[stage][color]; i++) {\n//     result = firstDesk.pop();\n//   }\n//   return result;\n// }\n\nfunction stageDesk (firstDesk, matrix, color, stage) {\n  let result =[];\n  let x = [];\n  while (x.length < matrix[stage][color]) {\n    result = firstDesk.pop();\n    x.push(result);\n  }\n return x;\n}\n\n// while (arr.length > 0) { // массив уменьшается в цикле пока не достигнет нуля\n// \tlet first = arr.shift();\n// \tlet last  = arr.pop();\n\t\n// \tlet str = first + last; // тут будет строка '16', потом '25', потом '34'\n// \tresult.push(str);\n// }\n\n\n// const test1 = stageDesk(firstBrownDesk, matrixAzathoth, brown, stage1);\n// console.log(test1);\n\nlet arr =[];\nconst firstStageDeck = arr.concat(stageDesk(firstGreenDesk, matrixAzathoth, green, stage1), stageDesk(firstBrownDesk, matrixAzathoth, brown, stage1), stageDesk(firstBlueDesk, matrixAzathoth, blue, stage1));\nconst secondStageDeck = arr.concat(stageDesk(firstGreenDesk, matrixAzathoth, green, stage2), stageDesk(firstBrownDesk, matrixAzathoth, brown, stage2), stageDesk(firstBlueDesk, matrixAzathoth, blue, stage2));\nconst thirdStageDeck = arr.concat(stageDesk(firstGreenDesk, matrixAzathoth, green, stage3), stageDesk(firstBrownDesk, matrixAzathoth, brown, stage3), stageDesk(firstBlueDesk, matrixAzathoth, blue, stage3));\n\n\n\n\n\n\nconst shuffle = (deck) => [...deck].sort(() => Math.random() - 0.5);\n\nconst shuffleFirstStage = shuffle(firstStageDeck);\nconst shuffleSecondStage = shuffle(secondStageDeck);\nconst shuffleThirdStage = shuffle(thirdStageDeck);\n\n/*теперь складываю колоды этапов друг на друга, сначала 3 потом 2 потом 1 */\nconst deck = [shuffleThirdStage, shuffleSecondStage, shuffleFirstStage].flat();\n\n/*теперь карты по одной должны открываться по клику на рубашку*/\n\n\nfunction openCard () {\n  let result =[];\n    result = deck.pop();\n    console.log(result);\n    return result;\n  }\n\nfunction viewCard() {\n  const newCard = openCard();\n  if (newCard) {\n    const img = new Image();\n    img.src = `${newCard.cardFace}`;\n    img.className = 'mythicCardBackground';\n    viewCardDeck.childNodes.forEach(node => viewCardDeck.removeChild(node));\n    // viewCardDeck.style.backgroundImage = `url('${img.src}')`;\n    viewCardDeck.append(img);\n  } else {\n    alert('No more cards');\n  }\n  \n  // viewCardDeck.style.width  = \"188px\";\n  // viewCardDeck.style.height = \"275px\";\n  // viewCardDeck.style.borderRadius = '10px';\n\n}  \n\ncardDeck.addEventListener(\"click\", viewCard);\n\n\n\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","cards","brown1","brown2","brown3","brown4","brown5","brown6","brown7","brown8","brown9","brown10","brown11","brown12","brown13","brown14","brown15","brown16","brown17","brown18","brown19","brown20","brown21","id","cardFace","difficulty","color","green1","green2","green3","green4","green5","green6","green7","green8","green9","green10","green11","green12","green13","green14","green15","green16","green17","green18","blue1","blue2","blue3","blue4","blue5","blue6","blue7","blue8","blue9","blue10","blue11","blue12","ImageCards","AzathothCard","CthulhuCard","YogSothothCard","ShubNiggurathCard","deckIdlevels","very_easy","easy","normal","hard","very_hard","cardDeck","querySelector","viewCardDeck","card","getElementsByClassName","level","matrixAzathoth","cardClickHandler","event","cardId","target","getIdCard","matrix","textContent","addNumbers","ancient","getElementById","Array","prototype","forEach","call","item","classList","remove","add","toggleCard","alert","levelClickHandler","levelId","getIdLevel","dataLevelId","console","log","levelButton","toggleLevel","addFirstDesk","cardsData","deskLength","sum","sumResults","countColumn","i","j","push","showSumByColumn","max","result","includes","getRandomNum","addEventListener","firstGreenDesk","firstBrownDesk","firstBlueDesk","min","Math","ceil","floor","random","stageDesk","firstDesk","stage","x","pop","arr","firstStageDeck","concat","secondStageDeck","thirdStageDeck","shuffle","deck","sort","shuffleFirstStage","shuffleSecondStage","flat","newCard","openCard","img","Image","className","childNodes","node","removeChild","append"],"sourceRoot":""}